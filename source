/*
  The codes used on an Arduino Nano to get the Smuggler's Room Droid Interface kit to light up and spin
  Goals include the use of individualy addressable LEDs and a stepper motor to tell a story of a droid 
  attempting to hack into an imperal system.
  This codes is also written and provided toi the Smuggler's Room Facebook group to help get other in the 
  community to get their kit to work. So notes are provided with that in mind. 
*/

// Define LED data
#include "FastLED.h" //Using this libary
#define NUM_LEDS 27 //Number of LEDs being used
#define Data_Pin 5 //Nano pin being used 
#define chipset WS2812B //Type of lights being used
CRGB leds[NUM_LEDS];

//Define motor pins
const int dirPin = 2;
const int stepPin = 3;
const int stepsPerRevolution = 200; //Number of steps in a revolution for this motor

long randomNumber; // Define using random number to select what lights to light up
int seconds;

CRGB rotateColor [] = {
   CRGB::Blue,
   CRGB::Teal,
   CRGB::DeepPink,
   CRGB::Yellow,
   CRGB::DarkOrange,
   CRGB::DarkCyan,
   CRGB::Turquoise
   };

void setup()
{
  FastLED.addLeds<chipset, Data_Pin, GRB>(leds, NUM_LEDS); //Define LED data - note these light are Green, Red, Blue (GRB) not RGB
  //Declare pins as Outputs
  pinMode(stepPin, OUTPUT);
  pinMode(dirPin, OUTPUT);
}

void loop()
{
  randomSeed(analogRead(A0));  //Get a random seed from Analog 0
  delay (300); //A pause for a safe boot up of all the equipment
  topVent(); //Top vent with 3 LEDs
  frontVent(); //First 3 LEDS are tied to the front vent
  delay(500); //Pause before continuing
  tiles(); //2 LEDS are the front tile buttons
  ventBottom(); // Large vents across the bottom - three on each side - six in total
  interface(); //The last 6 LEDs around the wheels
  delay(1000); //A dramitic PAUSE
  tiles(); //Adding these a second time breaks the linearness
  stepper(); //Call the mottor fuction
  finish(); //An end light sequence
}

void frontVent ()
/*
  I am using a white light because the plastic cover is orange and white is the brightest.
  4 lights are tied to this function. The lights turn on one by one, then all off, and then all on.
*/
{
  for (int i = 0; i < 4; i++) //Turns on the lights one at a time
  {
    leds[i] = CRGB::White;
    FastLED.show();
    delay(300);
  }
  //Make the lights flash
  for (int x = 0; x < 4; x++) //Flash the lights 4 times
  {
  frontVentFlash();
  }
}

void frontVentFlash() // Turns the lights on the front vent (orange) on and off
{
for (int i = 0; i < 4; i++) //Turns off the lights all at once
  {
    leds[i] = CRGB::Black;
  }
  FastLED.show();
  delay(300);
for (int i = 0; i < 4; i++) //Turns on the lights all at once
  {
    leds[i] = CRGB::White;
  }
  FastLED.show();
  delay(200);
}

void tiles()
/*
  These are the static blue and white buttons on the face of the unit. Called tiles in build instructions.
  The plastic is colored, so both lights are set to white. The code flashes the lights on and off.
*/
{
 for (int x = 0; x < 6; x++) //Flash the lights 6 times
 {
   randomNumber = random(4,5);
   flash(randomNumber);
 }
 leds[4] = CRGB::White; //Turn on and leave on light 4
 FastLED.show();
 delay(300);
}

void flash(int r) //Flashing the tile lights
{
  leds[r] = CRGB::White;
  FastLED.show();
  delay(300);
  leds[r] = CRGB::Black;
  FastLED.show();
  delay(300);
}

void topVent()
// Small vent on top with 3 lights, lights up at once.
{
  for (int i = 6; i < 17; i++) //Turn on all lights at once
  {
    leds[i] = CRGB::DarkViolet;
  }
  FastLED.show();
  delay(500);
}

void ventBottom()
// Two small vents on the bottom with 3 lights each. These light up and change colors sequentially.
{
  for (int i = 11; i < 17; i++) //Sequence lighting up first color
  {
  for (int r = 0; r < 3; r++)
  {
    leds[i] = rotateColor[r];
    FastLED.show();
    delay(300);
    }
  }
}

void interface() //These 6 LEDs around the wheels light up and change colors.
{
  for (int i = 17; i < 27; i++) //Turn the lights on at once
  {
    leds[i] = CRGB::Yellow;
  }
  FastLED.show();
  delay(300);
  for (int i = 17; i < 27; i++) //Turn the lights on at once
  {
    for (int r = 5; r < 7; r++)
    {
      leds[i] = rotateColor[r];
      FastLED.show();
      delay(300);
      }
    }
}

void stepper()
/*
  This spins the motor. The final code includes lighting effects.
  800 is the fastest spin I could get working and 3000 the slowest with the selected motor.
*/
{
  seconds = 1500;
  stepperRight (seconds);
  delay(300); //Pause before spinging the other direction
  seconds = 1800;
  stepperLeft (seconds);
  delay(200); //Pause before spinging the other direction
  seconds = 2000;
  stepperRight (seconds);
  red(); //Alert color change
  delay(2000); //A Pause to let the color sink in
  seconds = 2500;
  stepperLeft (seconds);
  delay(300); //Pause for drama
  seconds = 3000;
  stepperRight (seconds);
  delay(500); //Pause for drama
  seconds = 1000;
  stepperLeft (seconds);
 }

void stepperRight (int s) //Clockwise
{
digitalWrite(dirPin, HIGH); // Set motor direction clockwise
randomNumber = random(100, 600);
for (int i = 0; i < randomNumber; i ++)
  {
    digitalWrite(stepPin, HIGH);
    delayMicroseconds(s); //Higher the number the slower the spin
    digitalWrite(stepPin, LOW);
    delayMicroseconds(s);
  }
}

void stepperLeft (int s) //anti-clockwise
{
digitalWrite(dirPin, LOW); // Set motor direction antirclockwise
randomNumber = random(100, 600);
for (int i = 0; i < randomNumber; i ++)
 {
    digitalWrite(stepPin, HIGH);
    delayMicroseconds(s);
    digitalWrite(stepPin, LOW);
    delayMicroseconds(s);
  }
 }
 
 void red()
 {
 //Change color like a warning it is going wrong
 for (int i = 17; i < 27; i++) //Wheel lights all go red at once
  {
    leds[i] = CRGB::Red;
  }
    FastLED.show();
 } 

void finish() //End sequence that turns all the lights to one color and then off.
{
  for (int i = 27; i > 0; i--) //Quickly turn on all the lights going backwards
  {
    leds[i] = CRGB::DarkCyan;
    FastLED.show();
    delay(50);
  }
  seconds = 3000;
  stepperRight (seconds);
  delay(500); //Pause before turning them all off
  for (int i = 0; i < NUM_LEDS; i++)//Turn off the lights
  {
    leds[i] = CRGB::Black;
  }
  FastLED.show();
  delay(3000); //cooldown pause before stating everything again
}
